{"version":3,"sources":["services/utils/treeTravers.ts","components/CustomeSelectCategory.tsx","components/CustomeInputComponent.tsx","services/utils/calculateOptions.ts","scenes/Dashboard/Scenes/CreateCompany/components/CompanyMap.tsx","scenes/Dashboard/Scenes/CreateCompany/constants.ts","scenes/UserServices/scenes/Profile/constants.tsx","components/CustomeTextAreaComponent.tsx","components/forms/CompanyForm.tsx","scenes/Dashboard/Scenes/CreateCompany/index.tsx"],"names":["hasChildren","node","children","length","flattenToArray","arr","data","concat","notHaveChildren","renameProp","rest","subRows","Tree","reduce","_","reducerFn","init","acc","map","mapFn","newNode","mapChangeChildrenName","hasSubRows","styles","control","provided","border","dropdownIndicator","color","indicatorSeparator","CustomeSelectCategory","calculateOptions","label","field","form","touched","errors","setFieldValue","setFieldTouched","useState","searchValue","setSearchValue","isError","name","debouncedLoadOptions","useCallback","inputValue","callback","api","adminApi","getCategories","search","then","cacheOptions","isClearable","defaultOptions","loadOptions","e","cb","onInputChange","newValue","placeholder","onChange","value","onFocus","onBlur","noOptionsMessage","loadingMessage","role","className","CustomInputComponent","props","calculateLeafs","notHaveChildrenArray","d","item","id","title","parent_title","calculateFlatten","flattenTree","flattenVersion","console","log","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","position","CompanyMap","state","setState","Fragment","Map","onClick","newPosition","latlng","lat","lng","center","zoom","TileLayer","url","attribution","Marker","Popup","adminCreatevalidationSchema","Yup","username","required","password1","password2","when","is","val","oneOf","category","moreThan","manager_name","description","address","mobile_number","typeError","phone_number","companyEditValitionSchema","location","company_number","zip_code","CustomeTextAreaComponent","CompanyForm","status","initialValue","canCreate","canEdit","initialValues","validationSchema","onSubmit","values","setSubmitting","isSubmitting","type","component","classnames","rows","JSON","stringify","defaultValues","website","Index"],"mappings":"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","file":"static/js/8.a63e6802.chunk.js","sourcesContent":["import * as _ from \"lodash\";\nimport { ICategoryRes } from \"./api/Admin/models\";\n\ninterface ITree {\n  reduce: any;\n  map: any;\n  mapChangeChildrenName: any;\n}\nfunction hasChildren(node: any) {\n  return (\n    typeof node === \"object\" &&\n    typeof node.children !== \"undefined\" &&\n    node.children.length > 0\n  );\n}\n\nexport function flattenToArray(arr:any, {children, ...data} :any) {\n    return arr.concat([{...data}]);\n}\nfunction hasSubRows(node: any) {\n  return (\n    typeof node === \"object\" &&\n    typeof node.subRows !== \"undefined\" &&\n    node.subRows.length > 0\n  );\n}\n\nexport function notHaveChildren(arr: any, data: any) {\n  if (!data.children.length) {\n    return arr.concat([{ ...data }]);\n  }\n  return arr;\n}\nexport function renameProp(node: any) {\n  const { children, ...rest } = node;\n  return {\n    ...rest,\n    subRows: children,\n  };\n}\n\nexport const Tree: ITree = {\n  reduce: _.curry<any, any, any, any>(function reduce(reducerFn, init, node) {\n    const acc = reducerFn(init, node);\n    if (!hasChildren(node)) {\n      return acc;\n    }\n    return node.children.reduce(Tree.reduce(reducerFn), acc);\n  }),\n  map: _.curry<any, any, any>(function map(mapFn, node) {\n    const newNode = mapFn(node);\n    if (hasChildren(node)) {\n      return newNode;\n    }\n    newNode.children = node.children.map(Tree.map(mapFn));\n    return newNode;\n  }),\n  mapChangeChildrenName: _.curry<any, any, any>(function map(mapFn, node) {\n    const newNode = mapFn(node);\n    if (hasSubRows(node)) {\n      return newNode;\n    }\n    newNode.subRows = node.children.map(Tree.mapChangeChildrenName(mapFn));\n    return newNode;\n  }),\n};\n","import {FieldAttributes} from \"formik\";\nimport * as _ from \"lodash\";\nimport React, {useCallback, useState} from \"react\";\nimport {OptionsType, OptionTypeBase, StylesConfig} from \"react-select\";\nimport AsyncSelect from \"react-select/async\";\nimport api from \"../services/utils/api\";\n\n\nconst styles: StylesConfig = {\n  control: (provided) => ({\n    ...provided,\n    border: \"1px solid red\",\n  }),\n  dropdownIndicator: (provided) => ({ ...provided, color: \"red\" }),\n  indicatorSeparator: (provided) => ({ ...provided, color: \"red\" }),\n};\n\nconst CustomeSelectCategory: React.FC<FieldAttributes<any>> = ({\n\tcalculateOptions,\n  label,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, setFieldValue, setFieldTouched }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n}) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleSearchValueChange = (newValue: string) =>\n    setSearchValue(newValue);\n  const isError = touched[field.name] && errors[field.name];\n  const handleChange = (e: any) => {\n    e && e.value && setFieldValue(field.name, e.value, false);\n    !e && setFieldValue(field.name, 0, false);\n  };\n  const handleFocus = () => {\n    setFieldTouched(field.name, false, true);\n  };\n  const handleBlur = () => {\n    setFieldTouched(field.name, true, true);\n  };\n  const promiseOptions = (\n    inputValue: string,\n    callback: (options: OptionsType<OptionTypeBase>) => void\n  ) => {\n    api.adminApi.getCategories({ search: inputValue }).then(({ data }) => {\n      callback(calculateOptions(data)!);\n    });\n  };\n\n  const debouncedLoadOptions = useCallback(\n    _.debounce(promiseOptions, 1000),\n    []\n  );\n\n  return (\n    <>\n      <label>{label}</label>\n      <AsyncSelect\n        cacheOptions\n        isClearable\n        defaultOptions\n        loadOptions={(e, cb) => debouncedLoadOptions(e, cb)}\n        inputValue={searchValue}\n        onInputChange={handleSearchValueChange}\n        placeholder=\"انتخاب کنید\"\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        styles={isError && styles}\n        noOptionsMessage={() => \"موردی یافت نشد!\"}\n        loadingMessage={() => \"در حال بارگذاری...\"}\n      />\n\n      {isError && (\n        <div role=\"alert\" className=\"text-danger form-control-feedback\">\n          {errors[field.name]}\n        </div>\n      )}\n    </>\n  );\n};\nexport default CustomeSelectCategory;\n","import React from \"react\";\nimport { FieldAttributes } from \"formik\";\n\nconst CustomInputComponent: React.FC<FieldAttributes<any>> = ({\n  label,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n  const isError = touched[field.name] && errors[field.name];\n  return (\n    <div\n      className={`form-group  ${props.className? props.className: \"\"} ${isError ? \"has-danger\" : \"\"}`}\n    >\n      <label>{label}</label>\n      <input\n        {...field}\n        {...props}\n        className={`${isError ? \"form-control-danger\" : \"\"} form-control`}\n      />\n      {}\n      {isError && (\n        <div role=\"alert\" className=\"form-control-feedback\">\n          {errors[field.name]}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomInputComponent;\n","import { ICategoryRes } from \"./api/Admin/models\";\nimport { Tree, notHaveChildren, flattenToArray } from \"./treeTravers\";\nimport * as _ from \"lodash\";\n\nexport const calculateLeafs = (data: ICategoryRes[]) => {\n  if (data) {\n    const notHaveChildrenArray = data.map((d) =>\n      Tree.reduce(notHaveChildren, [], d)\n    );\n    const flattenVersion = _.flatten(notHaveChildrenArray);\n    const options = flattenVersion.map((item) => ({\n      value: item.id,\n      label: item.title,\n      parent_title: item.parent_title,\n    }));\n    return options;\n  }\n};\nexport const calculateFlatten = (data: ICategoryRes[]) => {\n  if (data) {\n    const flattenTree = data.map((d) => Tree.reduce(flattenToArray, [], d));\n    const flattenVersion = _.flatten(flattenTree);\n    console.log(flattenVersion);\n    const options = flattenVersion.map((item) => ({\n      value: item.id,\n      label: item.title,\n      parent_title: item.parent_title,\n    }));\n\treturn options\n    // return flattenTree\n  }\n};\n","import React,{useState} from \"react\";\n// import { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L, {LatLngTuple, LeafletMouseEvent} from \"leaflet\";\nimport {FieldAttributes} from \"formik\";\n\n\ndelete ((L.Icon.Default)as any).prototype._getIconUrl;\n\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// L.Icon.Default.imagePath = \"../../../../../assets/images/\";\nconst position = [35.64961, 51.166359] as LatLngTuple;\n\n\n\nexport const CompanyMap: React.FC<FieldAttributes<any>> = ({\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors,setFieldValue }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n\n}) => {\n\t const [state , setState] = useState<LatLngTuple> (position)\n\t const handleClick = (e :LeafletMouseEvent) => {\n\t\t const newPosition = [e.latlng.lat ,e.latlng.lng] as LatLngTuple\n\t\t setState(newPosition)\n\t\t setFieldValue(field.name ,newPosition,false)\n\t }\n\n  return (\n\t<React.Fragment>\n\n\t\t<Map onClick={handleClick}  center={position} zoom={13}>\n\t\t<TileLayer\n\t\t  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t/>\n\t\t<Marker position={state}>\n\t\t  <Popup>\n\t\t\t<br />\n\t\t  </Popup>\n\t\t</Marker>\n\t  </Map>\n\t</React.Fragment>\n  );\n}; \n\nexport default CompanyMap\n","import * as Yup from \"yup\";\nimport { utils } from \"react-modern-calendar-datepicker\";\nimport { convertStringToDate } from \"../../../../services/utils/convertStringToDate\";\nexport const adminCreatevalidationSchema = Yup.object({\n  username: Yup.string().required(\"نام کاربری را وارد کنید\"),\n  password1: Yup.string().required(\"رمز عبور را وارد کنید\"),\n  password2: Yup.string()\n    .required(\"تکرار رمز عبور الزامی است\")\n    .when(\"password\", {\n      is: (val) => !!(val && val.length > 0),\n      then: Yup.string().oneOf(\n        [Yup.ref(\"password1\")],\n        \"ﺮﻣﺯ ﻊﺑﻭﺭ ﺏﺍ ﺖﮐﺭﺍﺭ ﺂﻧ ﺏﺎﯾﺩ ﺏﺭﺎﺑﺭ ﺏﺎﺷﺩ\"\n      ),\n    }),\n  category: Yup.number().moreThan(1, \"لطفا دسته بندی را انتخاب کنید\"),\n  manager_name: Yup.string().required(\"لطفا نام مدیرعامل را وارد کنید\"),\n  name: Yup.string().required(\"لطفا نام شرکت را وارد کنید\"),\n  description: Yup.string().required(\"لطفا نام شرکت را وارد کنید\"),\n  address: Yup.string().required(\"لطفا آدرس را وارد کنید\"),\n  mobile_number: Yup.number()\n    .typeError(\"شماره موبایل نمیتواند حروف باشد\")\n    .required(\"لطفا شماره موبایل خود را وارد کنید\"),\n  phone_number: Yup.number()\n    .typeError(\"شماره تلفن شرکت نمیتواند حروف باشد\")\n    .required(\"شماره تلفن شرکت را وارد کنید\"),\n});\n\n// zip_code: Yup.number()\n//   .typeError(\"کد پستی نمیتواند حروف باشد \")\n//   .required(\"کد پستی را وارد کنید\"),\n// end_date: Yup.string().required(\"تاریخ پایان را وارد کنید\"),\n// start_date: Yup.string()\n//   .required(\"تاریخ شروع را وارد کنید\")\n//   .test(\"isBefore\", \"تاریخ شروع باید قبل از تاریخ پایان باشد\", function (\n//     value\n//   ) {\n//     const endDate = this.parent.end_date as string;\n//     if (endDate) {\n//       return utils(\"fa\").isBeforeDate(\n//         convertStringToDate(value),\n//         convertStringToDate(endDate)\n//       );\n//     }\n//     return true;\n//   }),\n","import * as Yup from \"yup\";\nimport { utils } from \"react-modern-calendar-datepicker\";\nimport { convertStringToDate } from \"../../../../services/utils/convertStringToDate\";\nexport const companyEditValitionSchema= Yup.object({\n  name: Yup.string().required(\"لطفا نام شرکت را وارد کنید\"),\n  location: Yup.string().required(\"لطفا آدرس را وارد کنید\"),\n  phone_number: Yup.number()\n    .typeError(\"شماره موبایل نمیتواند حروف باشد\")\n    .required(\"لطفا شماره موبایل خود را وارد کنید\"),\n  company_number: Yup.number()\n    .typeError(\"شماره تلفن شرکت نمیتواند حروف باشد\")\n    .required(\"شماره تلفن شرکت را وارد کنید\"),\n  zip_code: Yup.number()\n    .typeError(\"کد پستی نمیتواند حروف باشد \")\n    .required(\"کد پستی را وارد کنید\"),\n});\n","\nimport React from \"react\";\nimport { FieldAttributes } from \"formik\";\n\nconst CustomeTextAreaComponent: React.FC<FieldAttributes<any>> = ({\n  label,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n  const isError = touched[field.name] && errors[field.name];\n  return (\n    <div\n      className={`form-group ${props.className} ${isError ? \"has-danger\" : \"\"}`}\n    >\n      <label>{label}</label>\n      <textarea\n        {...field}\n        {...props}\n        className={`${isError ? \"form-control-danger\" : \"\"} form-control`}\n  ></textarea>\n      {}\n      {isError && (\n        <div role=\"alert\" className=\"form-control-feedback\">\n          {errors[field.name]}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomeTextAreaComponent;\n","// Render Prop\nimport { Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport CompanyMap from \"../../scenes/Dashboard/Scenes/CreateCompany/components/CompanyMap\";\nimport CustomeSelectCategory from \"../CustomeSelectCategory\";\nimport { adminCreatevalidationSchema } from \"../../scenes/Dashboard/Scenes/CreateCompany/constants\";\nimport { IAdminCreateCompanyFormikState } from \"../../scenes/Dashboard/Scenes/CreateCompany/models\";\nimport { companyEditValitionSchema } from \"../../scenes/UserServices/scenes/Profile/constants\";\nimport { ICompanyEditFormikState } from \"../../scenes/UserServices/scenes/Profile/models\";\nimport CustomInputComponent from \"../CustomeInputComponent\";\nimport CustomeTextAreaComponent from \"../CustomeTextAreaComponent\";\nimport { ICompanyRes } from \"../../services/utils/api/models\";\nimport classnames from 'classnames'\nimport {stat} from \"fs\";\nimport {calculateLeafs} from \"../../services/utils/calculateOptions\";\n\n// declare function fromType<T extends boolean>(\n//   x: T\n// ): T extends true\n//   ? IAdminCreateCompanyFormikState\n//   : ICompanyikState;\n\ninterface IProps<T> {\n  status: \"admin-create\" | \"company-edit\";\n  initialValue: T;\n}\n\nconst CompanyForm = <T extends IAdminCreateCompanyFormikState | ICompanyRes>({\n  status,\n  initialValue,\n}: IProps<T>) => {\n\tconst canCreate= status === 'admin-create'\n\tconst canEdit= status === 'company-edit'\n  return (\n    <div>\n      <Formik<T, {}>\n        initialValues={initialValue}\n        validationSchema={\n          status === \"admin-create\"\n            ? adminCreatevalidationSchema\n            : companyEditValitionSchema\n        }\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(values);\n        }}\n      >\n        {({ isSubmitting, values }) => (\n          <Form className=\"form-horizontal mt-4\">\n            <div className=\"row\">\n              {canCreate && (\n                <div className=\"col-md-4\">\n                  <Field\n                    label=\"نام کاربری\"\n                    type=\"text\"\n                    name=\"username\"\n                    component={CustomInputComponent}\n                  />\n                  <Field\n                    label=\"رمز عبور\"\n                    type=\"text\"\n                    name=\"password1\"\n                    component={CustomInputComponent}\n                  />\n                  <Field\n                    label=\"تکرار رمز عبور\"\n                    type=\"text\"\n                    name=\"password2\"\n                    component={CustomInputComponent}\n                  />\n                </div>\n              )}\n              <div className={classnames({'col-md-4' : canCreate , 'col-md-6' : canEdit})}>\n                <Field\n                  label=\"نام شرکت\"\n                  type=\"text\"\n                  name=\"name\"\n                  component={CustomInputComponent}\n                />\n                <Field\n                  label=\"نام مدیر عامل\"\n                  type=\"text\"\n                  name=\"manager_name\"\n                  component={CustomInputComponent}\n                />\n                <Field\n                  label=\"شماره همراه\"\n                  type=\"text\"\n                  name=\"mobile_number\"\n                  component={CustomInputComponent}\n                />\n              </div>\n              <div className={classnames({'col-md-4' : canCreate , 'col-md-6' : canEdit})}>\n                <Field\n                  label=\"شماره تلفن شرکت\"\n                  type=\"text\"\n                  name=\"phone_number\"\n                  component={CustomInputComponent}\n                />\n                <Field\n                  label=\"آدرس سایت\"\n                  type=\"text\"\n                  name=\"website\"\n                  component={CustomInputComponent}\n                />\n                <Field\n\t\t\t\tlabel=\"فیلد کاری\"\n\t\t\t\tcalculateOptions={calculateLeafs}\n                  type=\"text\"\n                  name=\"category\"\n                  component={CustomeSelectCategory}\n                />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <Field\n                  name=\"address\"\n                  component={CustomeTextAreaComponent}\n                  rows={4}\n                  label=\"آدرس\"\n                  type=\"text\"\n                />\n                <Field name=\"location\" component={CompanyMap} />\n              </div>\n              <div className=\"col-md-6\">\n                <Field\n                  label=\"شرح فعالیت\"\n                  type=\"text\"\n                  name=\"description\"\n                  component={CustomeTextAreaComponent}\n                  rows={20}\n                  className=\"mt-md-0 mt-3\"\n                />\n              </div>\n            </div>\n\n            {/* <div className=\"row\">\n              {status === \"admin-create\" && (\n                <>\n                  <div className=\"col-12 col-md-6 col-xl-4 \">\n                    <Field\n                      label=\"تاریخ شروع فعالیت:\"\n                      type=\"text\"\n                      name=\"start_date\"\n                      component={CustomeCalanderComponent}\n                    />\n                  </div>\n                  <div className=\" col-12 col-md-6 col-xl-4\">\n                    <Field\n                      label=\"تاریخ پایان فعالیت:\"\n                      type=\"text\"\n                      name=\"end_date\"\n                      component={CustomeCalanderComponent}\n                    />\n                  </div>\n                </>\n              )}\n              <div\n                className={`col-12 ${\n                  status === \"admin-create\" ? \"col-xl-4\" : \"\"\n                }  mb-2`}\n              >\n                <Field\n                  name=\"location\"\n                  component={CustomInputComponent}\n                  label=\"آدرس:\"\n                  type=\"text\"\n                />\n                <CompanyMap />\n              </div>\n            </div> */}\n\n            <button type=\"submit\" className=\"btn btn-success\">\n              <i className=\"fa fa-check\" />{\" \"}\n              {canCreate ? \"ثبت شرکت\" : \"ارسال درخواست تفییر\"}\n            </button>\n\n            {JSON.stringify(values, null, 2)}\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default CompanyForm;\n","import React from \"react\";\nimport { IAdminCreateCompanyFormikState } from \"./models\";\nimport CompanyForm from \"../../../../components/forms/CompanyForm\";\n\nconst defaultValues: IAdminCreateCompanyFormikState = {\n  username: \"\",\n  password1: \"\",\n  password2: \"\",\n  name: \"\",\n  website: \"\",\n  category: 0,\n  manager_name: \"\",\n  phone_number: \"\",\n  mobile_number: \"\",\n  address: \"\",\n  description: \"\",\n  location: [35.64961, 51.166359],\n};\n\nconst Index = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-12\">\n        <div className=\"card card-body\">\n          <h4 className=\"card-title\">ثبت شرکت</h4>\n          <h5 className=\"card-subtitle\">برای ثبت شرکت فرم زیر را پر کنید.</h5>\n          <CompanyForm<IAdminCreateCompanyFormikState>\n            status=\"admin-create\"\n            initialValue={defaultValues}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n"],"sourceRoot":""}