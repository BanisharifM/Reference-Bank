{"version":3,"sources":["components/PictureOverlayPreview.tsx","services/utils/treeTravers.ts","components/CustomeSelectCategory.tsx","components/CustomeInputComponent.tsx","services/utils/calculateOptions.ts","scenes/siteManager/scenes/CategoryManager/components/CategoryModal/PicCart.tsx","scenes/siteManager/components/AddImage.tsx","scenes/siteManager/components/SliderCards.tsx","components/CircleButton.tsx","components/CloseModalIcon.tsx","scenes/siteManager/scenes/CategoryManager/components/CategoryModal/CreateCategoryModal.tsx","scenes/siteManager/scenes/CategoryManager/components/CategoryModal/EditChangeName.tsx","scenes/siteManager/scenes/CategoryManager/components/CategoryModal/NavTabs.tsx","services/axios/fetchers.ts","services/contexts/CategoryIdContext/context.ts","scenes/siteManager/scenes/CategoryManager/components/CategoryModal/EditCategorySlider.tsx","scenes/siteManager/scenes/CategoryManager/components/CategoryModal/ImageEditSection.tsx","services/contexts/CategoryIdContext/CategoryIdProvider.tsx","components/Centerise.tsx","scenes/siteManager/scenes/CategoryManager/components/CategoryModal/EditCategoryModal.tsx","scenes/siteManager/scenes/CategoryManager/index.tsx"],"names":["PictureOverlayPreview","modalDispatcher","image","handleCloseModal","type","EModalActionTypes","HIDE_MODAL","mfpRef","useRef","useOutsideClicker","className","style","overflow","ref","title","onClick","src","maxHeight","alt","hasChildren","node","children","length","flattenToArray","arr","data","concat","notHaveChildren","renameProp","rest","subRows","Tree","reduce","_","reducerFn","init","acc","map","mapFn","newNode","mapChangeChildrenName","hasSubRows","styles","control","provided","border","dropdownIndicator","color","indicatorSeparator","CustomeSelectCategory","calculateOptions","label","field","form","touched","errors","setFieldValue","setFieldTouched","useState","searchValue","setSearchValue","isError","name","debouncedLoadOptions","useCallback","inputValue","callback","api","adminApi","getCategories","search","then","cacheOptions","isClearable","defaultOptions","loadOptions","e","cb","onInputChange","newValue","placeholder","onChange","value","onFocus","onBlur","noOptionsMessage","loadingMessage","role","CustomInputComponent","props","calculateLeafs","notHaveChildrenArray","d","item","id","parent_title","calculateFlatten","flattenTree","flattenVersion","console","log","PicCart","dispatch","useModalDispatch","SHOW_MODAL","payload","component","AddImage","onSubmit","url","files","setFiles","useDropzone","accept","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","handleSend","a","thumbs","index","Fragment","key","size","Button","text","newFiles","filter","i","handleRemove","useEffect","forEach","revokeObjectURL","SliderCards","onDelete","sureDelete","setSureDelete","handleDelete","minHeight","CircleButton","loading","icon","Spinner","CloseModalIcon","data-dismiss","aria-hidden","EditCategoryModal","mutate","useSWR","baseAdminUrl","display","initialValues","parent","validationSchema","Yup","required","values","setSubmitting","createCategory","isSubmitting","height","btnType","EditChangeName","categoryName","onEditCategoryName","NavTabs","activeItem","onChangeActiveItem","itemTwoActive","data-toggle","aria-selected","fetcherWithParam","apiUrl","param","paramValue","axios","get","res","categoryIdContext","createContext","EditCategorySlider","categoryId","useContext","handleDeleteItem","deleteCategorySlider","handleSubmitImage","addCategorySlider","category","ImageEditSection","isActivePageTwo","CategoryIdProvider","Provider","Centerise","width","modalContentRef","setActiveItem","setLoading","handleCahngeActiveItem","setCategoryName","handleSubmit","editCategory","currentTarget","hooks","useColumnOrder","useFilters","useGroupBy","useSortBy","useExpanded","useFlexLayout","usePagination","useResizeColumns","useRowSelect","Index","modalDispatch","rows","useMemo","openEditCategoryModal","modalProps","handleCreateCategory","CreateCategoryModal","handleDeleteCategory","window","confirm","deleteCategory","handleEditCategory","columns","React","accessor","Header","getToggleAllRowsExpandedProps","isAllRowsExpanded","Cell","row","canExpand","getToggleRowExpandedProps","paddingRight","depth","isExpanded","original","tableInstance","useTable","TableContainer","tool","ReactTable"],"mappings":"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","file":"static/js/6.3f5a06bc.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport Img from \"../assets/images/users/1.jpg\";\nimport { EModalActionTypes } from \"../services/contexts/ModalContext/models\";\nimport { AppActions } from \"../services/contexts/AppActions\";\nimport { useOutsideClicker } from \"../services/hooks/useOutsideClicker\";\n\ninterface IProps {\n  modalDispatcher: (actions: AppActions) => void;\n  image: string;\n}\nconst PictureOverlayPreview: React.FC<IProps> = ({\n  modalDispatcher,\n  image,\n}) => {\n  const handleCloseModal = () => {\n    modalDispatcher({ type: EModalActionTypes.HIDE_MODAL });\n  };\n  const mfpRef = useRef<HTMLDivElement>(null);\n  useOutsideClicker(mfpRef, handleCloseModal);\n  return (\n    <>\n      <div className=\"mfp-bg mfp-img-mobile mfp-ready\"></div>\n      <div\n        className=\"mfp-wrap mfp-close-btn-in mfp-img-mobile mfp-ready\"\n        style={{ overflow: \"hidden auto\" }}\n      >\n        <div className=\"mfp-container mfp-s-ready mfp-image-holder\">\n          <div className=\"mfp-content\" ref={mfpRef}>\n            <div className=\"mfp-figure\">\n              <button\n                title=\"Close (Esc)\"\n                type=\"button\"\n                className=\"mfp-close\"\n                onClick={handleCloseModal}\n              >\n                ×\n              </button>\n              <figure>\n                <img\n                  className=\"mfp-img\"\n                  src={image}\n                  style={{ maxHeight: \"729px\" }}\n                  alt=\"user-page\"\n                />\n                <figcaption>\n                  <div className=\"mfp-bottom-bar\">\n                    <div className=\"mfp-title\"></div>\n                    <div className=\"mfp-counter\"></div>\n                  </div>\n                </figcaption>\n              </figure>\n            </div>\n          </div>\n          <div className=\"mfp-preloader\">Loading...</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PictureOverlayPreview;\n","import * as _ from \"lodash\";\nimport { ICategoryRes } from \"./api/Admin/models\";\n\ninterface ITree {\n  reduce: any;\n  map: any;\n  mapChangeChildrenName: any;\n}\nfunction hasChildren(node: any) {\n  return (\n    typeof node === \"object\" &&\n    typeof node.children !== \"undefined\" &&\n    node.children.length > 0\n  );\n}\n\nexport function flattenToArray(arr:any, {children, ...data} :any) {\n    return arr.concat([{...data}]);\n}\nfunction hasSubRows(node: any) {\n  return (\n    typeof node === \"object\" &&\n    typeof node.subRows !== \"undefined\" &&\n    node.subRows.length > 0\n  );\n}\n\nexport function notHaveChildren(arr: any, data: any) {\n  if (!data.children.length) {\n    return arr.concat([{ ...data }]);\n  }\n  return arr;\n}\nexport function renameProp(node: any) {\n  const { children, ...rest } = node;\n  return {\n    ...rest,\n    subRows: children,\n  };\n}\n\nexport const Tree: ITree = {\n  reduce: _.curry<any, any, any, any>(function reduce(reducerFn, init, node) {\n    const acc = reducerFn(init, node);\n    if (!hasChildren(node)) {\n      return acc;\n    }\n    return node.children.reduce(Tree.reduce(reducerFn), acc);\n  }),\n  map: _.curry<any, any, any>(function map(mapFn, node) {\n    const newNode = mapFn(node);\n    if (hasChildren(node)) {\n      return newNode;\n    }\n    newNode.children = node.children.map(Tree.map(mapFn));\n    return newNode;\n  }),\n  mapChangeChildrenName: _.curry<any, any, any>(function map(mapFn, node) {\n    const newNode = mapFn(node);\n    if (hasSubRows(node)) {\n      return newNode;\n    }\n    newNode.subRows = node.children.map(Tree.mapChangeChildrenName(mapFn));\n    return newNode;\n  }),\n};\n","import {FieldAttributes} from \"formik\";\nimport * as _ from \"lodash\";\nimport React, {useCallback, useState} from \"react\";\nimport {OptionsType, OptionTypeBase, StylesConfig} from \"react-select\";\nimport AsyncSelect from \"react-select/async\";\nimport api from \"../services/utils/api\";\n\n\nconst styles: StylesConfig = {\n  control: (provided) => ({\n    ...provided,\n    border: \"1px solid red\",\n  }),\n  dropdownIndicator: (provided) => ({ ...provided, color: \"red\" }),\n  indicatorSeparator: (provided) => ({ ...provided, color: \"red\" }),\n};\n\nconst CustomeSelectCategory: React.FC<FieldAttributes<any>> = ({\n\tcalculateOptions,\n  label,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors, setFieldValue, setFieldTouched }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n}) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleSearchValueChange = (newValue: string) =>\n    setSearchValue(newValue);\n  const isError = touched[field.name] && errors[field.name];\n  const handleChange = (e: any) => {\n    e && e.value && setFieldValue(field.name, e.value, false);\n    !e && setFieldValue(field.name, 0, false);\n  };\n  const handleFocus = () => {\n    setFieldTouched(field.name, false, true);\n  };\n  const handleBlur = () => {\n    setFieldTouched(field.name, true, true);\n  };\n  const promiseOptions = (\n    inputValue: string,\n    callback: (options: OptionsType<OptionTypeBase>) => void\n  ) => {\n    api.adminApi.getCategories({ search: inputValue }).then(({ data }) => {\n      callback(calculateOptions(data)!);\n    });\n  };\n\n  const debouncedLoadOptions = useCallback(\n    _.debounce(promiseOptions, 1000),\n    []\n  );\n\n  return (\n    <>\n      <label>{label}</label>\n      <AsyncSelect\n        cacheOptions\n        isClearable\n        defaultOptions\n        loadOptions={(e, cb) => debouncedLoadOptions(e, cb)}\n        inputValue={searchValue}\n        onInputChange={handleSearchValueChange}\n        placeholder=\"انتخاب کنید\"\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        styles={isError && styles}\n        noOptionsMessage={() => \"موردی یافت نشد!\"}\n        loadingMessage={() => \"در حال بارگذاری...\"}\n      />\n\n      {isError && (\n        <div role=\"alert\" className=\"text-danger form-control-feedback\">\n          {errors[field.name]}\n        </div>\n      )}\n    </>\n  );\n};\nexport default CustomeSelectCategory;\n","import React from \"react\";\nimport { FieldAttributes } from \"formik\";\n\nconst CustomInputComponent: React.FC<FieldAttributes<any>> = ({\n  label,\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n  const isError = touched[field.name] && errors[field.name];\n  return (\n    <div\n      className={`form-group  ${props.className? props.className: \"\"} ${isError ? \"has-danger\" : \"\"}`}\n    >\n      <label>{label}</label>\n      <input\n        {...field}\n        {...props}\n        className={`${isError ? \"form-control-danger\" : \"\"} form-control`}\n      />\n      {}\n      {isError && (\n        <div role=\"alert\" className=\"form-control-feedback\">\n          {errors[field.name]}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomInputComponent;\n","import { ICategoryRes } from \"./api/Admin/models\";\nimport { Tree, notHaveChildren, flattenToArray } from \"./treeTravers\";\nimport * as _ from \"lodash\";\n\nexport const calculateLeafs = (data: ICategoryRes[]) => {\n  if (data) {\n    const notHaveChildrenArray = data.map((d) =>\n      Tree.reduce(notHaveChildren, [], d)\n    );\n    const flattenVersion = _.flatten(notHaveChildrenArray);\n    const options = flattenVersion.map((item) => ({\n      value: item.id,\n      label: item.title,\n      parent_title: item.parent_title,\n    }));\n    return options;\n  }\n};\nexport const calculateFlatten = (data: ICategoryRes[]) => {\n  if (data) {\n    const flattenTree = data.map((d) => Tree.reduce(flattenToArray, [], d));\n    const flattenVersion = _.flatten(flattenTree);\n    console.log(flattenVersion);\n    const options = flattenVersion.map((item) => ({\n      value: item.id,\n      label: item.title,\n      parent_title: item.parent_title,\n    }));\n\treturn options\n    // return flattenTree\n  }\n};\n","import React from \"react\";\nimport { useModalDispatch } from \"../../../../../../services/contexts/ModalContext/ModalContext\";\nimport { EModalActionTypes } from \"../../../../../../services/contexts/ModalContext/models\";\nimport PictureOverlayPreview from \"../../../../../../components/PictureOverlayPreview\";\n\ninterface IProps {\n  image: string;\n}\nconst PicCart: React.FC<IProps> = ({ image }) => {\n  const dispatch = useModalDispatch();\n  const handleOpenPreview = () => {\n    dispatch({\n      type: EModalActionTypes.SHOW_MODAL,\n      payload: { component: PictureOverlayPreview, props: { image } },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"el-card-item\">\n          <div className=\"el-card-avatar el-overlay-1\">\n            <img src={image} alt=\"user\" />\n            <div className=\"el-overlay\">\n              <ul className=\"el-info\">\n                <li onClick={handleOpenPreview}>\n                  <a className=\"btn default btn-outline image-popup-vertical-fit\">\n                    <i className=\"icon-magnifier\"></i>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n          {/* <div className=\"el-card-content\">\n\n          </div> */}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PicCart;\n","// import React from \"react\";\n// import Img1 from \"../../../../../assets/images/add.png\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport PicCart from \"../scenes/CategoryManager/components/CategoryModal/PicCart\";\nimport Button from \"../../../components/Button\";\n\ninterface IProps {\n  url: string;\n  onSubmit: (image: File) => Promise<any>;\n}\ninterface IFileWithPreview extends File {\n  preview: any;\n}\nconst AddImage: React.FC<IProps> = ({ onSubmit, url }) => {\n  const [files, setFiles] = useState<File[]>([]);\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    onDrop: (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n  });\n  const handleRemove = (index: number) => {\n    const newFiles = files.filter((item, i) => index !== i);\n    setFiles(newFiles);\n  };\n  const handleSend = async (file: File) => {\n    try {\n      await onSubmit(file);\n    } catch (e) {}\n  };\n\n  const thumbs = (files as Array<IFileWithPreview>).map((file, index) => (\n    <React.Fragment key={file.size}>\n      <PicCart image={file.preview} />\n      <Button\n        onClick={() => handleSend(file)}\n        className=\"ml-2 \"\n        type=\"success\"\n        text=\"ارسال\"\n      />\n      <Button onClick={() => handleRemove(index)} type=\"danger\" text=\"حذف\" />\n    </React.Fragment>\n  ));\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      (files as Array<IFileWithPreview>).forEach((file) =>\n        URL.revokeObjectURL(file.preview)\n      );\n    },\n    [files]\n  );\n  return (\n    <div className=\"col-lg-6\">\n      <section className=\"container\">\n        <div className=\"row\">\n          {!!thumbs.length && <div className=\"col-md-6\">{thumbs}</div>}{\" \"}\n          <div className=\"col-md-6\">\n            <div {...getRootProps({ className: \"dropzone\" })}>\n              <input {...getInputProps()} />\n              <p>\n                تصویر مورد نظر خود را انتخاب کنید یا در این محل بکشید. فرمتهای\n                jpeg و png پشتیبانی میشود\n              </p>\n              <span className=\"fa fa-plus\"></span>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\nexport default AddImage;\n","import React, { useState } from \"react\";\nimport { useModalDispatch } from \"../../../services/contexts/ModalContext/ModalContext\";\nimport { EModalActionTypes } from \"../../../services/contexts/ModalContext/models\";\nimport PictureOverlayPreview from \"../../../components/PictureOverlayPreview\";\nimport Button from \"../../../components/Button\";\n\ninterface IProps {\n  image: string;\n  index: number;\n  onDelete: (id: number) => Promise<any>;\n}\nconst SliderCards: React.FC<IProps> = ({ index, image, onDelete }) => {\n  const [sureDelete, setSureDelete] = useState(false);\n\n  const handleSetSure = () => {\n    setSureDelete(true);\n  };\n  const handleDiscaredDelete = () => {\n    setSureDelete(false);\n  };\n  const handleDelete = async () => {\n    try {\n      await onDelete(index);\n    } catch (e) {\n    } \n  };\n  const dispatch = useModalDispatch();\n  const handleOpenPreview = () => {\n    dispatch({\n      type: EModalActionTypes.SHOW_MODAL,\n      payload: { component: PictureOverlayPreview, props: { image } },\n    });\n  };\n  return (\n    <div className=\"col-lg-3 col-md-6\">\n      <div className=\"card\">\n        <div className=\"el-card-item\">\n          <div className=\"el-card-avatar el-overlay-1\">\n            <img src={image} alt=\"user\" style={{ minHeight: \"150px\" }} />\n            <div className=\"el-overlay\">\n              <ul className=\"el-info\">\n                <li>\n                  <a\n                    className=\"btn default btn-outline image-popup-vertical-fit\"\n                    // href=\"../assets/images/users/1.jpg\"\n                    onClick={handleOpenPreview}\n                  >\n                    <i className=\"icon-magnifier\"></i>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"el-card-content\">\n            <h4 className=\"box-title\">شماره {index}</h4>\n            {!sureDelete ? (\n              <button\n                type=\"button\"\n                className=\"btn waves-effect waves-light btn-danger\"\n                onClick={handleSetSure}\n              >\n                حذف\n              </button>\n            ) : (\n              <>\n                <Button\n                  type=\"success\"\n                  className=\"m-r-10\"\n                  text=\"بله\"\n                  onClick={handleDelete}\n                />\n                <Button\n                  type=\"warning\"\n                  text=\"خیر \"\n                  onClick={handleDiscaredDelete}\n                />\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n    // <div className=\"col-lg-2 col-md-6 img-responsive\">\n    //   <div className=\"card\">\n    //     <img\n    //       className=\"card-img-top img-responsive\"\n    //       src={image}\n    //       alt=\"Card cap\"\n    //     />\n    //     <div className=\"card-body\">\n    //       <div className=\"card-title\">\n    //         <h4>شماره {index}</h4>\n    //       </div>\n    //       <button className=\"btn btn-danger\">حذف</button>\n    //     </div>\n    //   </div>\n    // </div>\n\n    // <div className=\"col-lg-2 col-md-4\">\n    //   <a href=\"../assets/images/big/img1.jpg\" data-effect=\"mfp-zoom-in\">\n    //     <img src={image} className=\"img-responsive\" />\n    //     <br />\n    //     Zoom\n    //   </a>\n    // </div>\n  );\n};\n\nexport default SliderCards;\n","import React from \"react\";\nimport Spinner from \"./Spinner\";\n\ninterface IProps {\n  icon?: string;\n  type:\n    | \"primary\"\n    | \"success\"\n    | \"secondary\"\n    | \"info\"\n    | \"warning\"\n    | \"danger\"\n    | \"light\"\n    | \"dark\";\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  loading?: boolean;\n  size?: \"lg\" | \"xl\";\n  className?: string;\n}\n\nexport const CircleButton: React.FC<IProps> = ({\n  type,\n  onClick,\n  loading,\n  icon,\n  size,\n  className,\n}) => {\n  return (\n\t  <button onClick={onClick} type=\"button\" className={`btn btn-${type} btn-circle btn-${size} ${className}`}>\n      {loading ? <Spinner /> :<i className={icon}></i> }\n    </button>\n  );\n};\n","import React from \"react\";\n\ninterface IProps {\n  handleCloseModal: () => void;\n}\nconst CloseModalIcon: React.FC<IProps> = ({ handleCloseModal }) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"close\"\n      data-dismiss=\"modal\"\n      aria-hidden=\"true\"\n      onClick={handleCloseModal}\n    >\n      ×\n    </button>\n  );\n};\n\nexport default CloseModalIcon;\n","import { Field, Formik, Form } from \"formik\";\nimport React, { useState } from \"react\";\nimport Button from \"../../../../../../components/Button\";\nimport CloseModalIcon from \"../../../../../../components/CloseModalIcon\";\nimport CustomInputComponent from \"../../../../../../components/CustomeInputComponent\";\nimport CustomeSelectCategory from \"../../../../../../components/CustomeSelectCategory\";\nimport { AppActions } from \"../../../../../../services/contexts/AppActions\";\nimport { EModalActionTypes } from \"../../../../../../services/contexts/ModalContext/models\";\nimport {\n  ICreateCategory,\n  ICategoryRes,\n} from \"../../../../../../services/utils/api/Admin/models\";\nimport { calculateFlatten } from \"../../../../../../services/utils/calculateOptions\";\nimport api from \"../../../../../../services/utils/api\";\nimport useSWR from \"swr\";\nimport { baseAdminUrl } from \"../../../../../../services/utils/api/Admin\";\nimport * as Yup from \"yup\";\n//-----------------------------------------------------------------\n\ninterface IProps {\n  modalDispatcher: (actions: AppActions) => void;\n}\n\nconst EditCategoryModal: React.FC<IProps> = ({ modalDispatcher }) => {\n  const handleCloseModal = () => {\n    modalDispatcher({ type: EModalActionTypes.HIDE_MODAL });\n  };\n\n  const { mutate } = useSWR<ICategoryRes[]>(`${baseAdminUrl}/category/`);\n  //----------------form states----------------------//\n\n  return (\n    <>\n      <div className=\"modal-backdrop show\"></div>\n      <div\n        id=\"myModal\"\n        className=\"modal show long-modal\"\n        style={{ display: \"block\" }}\n      >\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\" id=\"myModalLabel\">\n                اییجاد دسته بندی\n              </h4>\n              <CloseModalIcon handleCloseModal={handleCloseModal} />\n            </div>\n\n            <Formik<ICreateCategory>\n              initialValues={{ title: \"\", parent: null }}\n              validationSchema={Yup.object({\n                title: Yup.string().required(\"عنوان دسته بندی الزامی است\"),\n              })}\n              onSubmit={async (values, { setSubmitting }) => {\n                await api.adminApi.createCategory(values);\n                mutate();\n                setSubmitting(false);\n              }}\n            >\n              {({ isSubmitting }) => (\n                <Form>\n                  <div className=\"modal-body\" style={{ height: \"500px\" }}>\n                    <Field\n                      label=\"عنوان دسته بندی جدید\"\n                      type=\"text\"\n                      name=\"title\"\n                      component={CustomInputComponent}\n                    />\n                    <Field\n                      label=\"اضافه کردن به \"\n                      calculateOptions={calculateFlatten}\n                      type=\"text\"\n                      name=\"parent\"\n                      component={CustomeSelectCategory}\n                    />\n                  </div>\n                  <div className=\"modal-footer\">\n                    <Button\n                      loading={isSubmitting}\n                      btnType=\"submit\"\n                      type=\"success\"\n                      text=\"ایجاد\"\n                    />\n                    <Button\n                      onClick={handleCloseModal}\n                      type=\"danger\"\n                      text=\"بستن\"\n                    />\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditCategoryModal;\n\n// user{\n\n// }\n\n// category:create category:delete\n","import React from \"react\";\n\ninterface IProps {\n  label:string\n  categoryName: string;\n  onEditCategoryName: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\nconst EditChangeName: React.FC<IProps> = ({\n  label,\n  categoryName,\n  onEditCategoryName,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label className=\"control-label\">{label }</label>\n      <input\n        type=\"text\"\n        id=\"categoryName\"\n        className=\"form-control\"\n        placeholder={label}\n        value={categoryName}\n        onChange={onEditCategoryName}\n      />\n    </div>\n  );\n};\n\nexport default EditChangeName;\n","import React from \"react\";\n\ninterface IProps {\n  activeItem: string;\n  onChangeActiveItem: (item: string) => void;\n}\nconst picCategory = \"تصویر دسته بندی\";\nconst sliderCategory = \"اسلایدر دسته بندی\";\n\nconst NavTabs: React.FC<IProps> = ({ activeItem, onChangeActiveItem }) => {\n  const itemOneActive = activeItem === picCategory;\n  const itemTwoActive = activeItem === sliderCategory;\n\n  return (\n    <ul className=\"nav nav-tabs customtab\">\n\t  {/* <li className=\"nav-item\" onClick={(e) => onChangeActiveItem(picCategory)}>\n\t\t<div\n\t\t  className={`nav-link ${itemOneActive ? \"active\" : \"\"}  `}\n\t\t  data-toggle=\"tab\"\n\t\t  role=\"tab\"\n\t\t  aria-selected=\"false\"\n\t\t>\n\t\t  <span className=\"hidden-xs-down\">تصویر دسته بندی</span>\n\t\t</div>\n\t  </li> */}\n      <li\n        className=\"nav-item\"\n        onClick={(e) => onChangeActiveItem(sliderCategory)}\n      >\n        <div\n          className={`nav-link ${itemTwoActive ? \"active\" : \"\"}`}\n          data-toggle=\"tab\"\n          role=\"tab\"\n          aria-selected=\"true\"\n        >\n          <span className=\"hidden-xs-down\">اسلایدر دسته بندی</span>\n        </div>\n      </li>\n    </ul>\n  );\n};\n\nexport default NavTabs;\n","import axios from \"axios\";\nexport const fetcherWithParam = (apiUrl: string, param: string, paramValue:  number |string) =>\n  axios.get(`${apiUrl}?${param}=${paramValue}`).then((res) => res.data);\n","\nimport {createContext, useContext} from 'react'\nconst initialId = 0\nexport const categoryIdContext = createContext(0)\n\nexport const useCategoyId =()=> useContext(categoryIdContext)\n","import React, { useState } from \"react\";\nimport SliderCards from \"../../../../components/SliderCards\";\nimport AddImage from \"../../../../components/AddImage\";\nimport { ISliderImage } from \"../Table/model\";\nimport {ICategorySlider} from \"../../../../../../services/utils/api/Admin/models\";\nimport api from '../../../../../../services/utils/api'\nimport useSWR, {mutate} from \"swr\";\nimport {baseAdminUrl} from \"../../../../../../services/utils/api/Admin\";\nimport {fetcherWithParam} from \"../../../../../../services/axios/fetchers\";\nimport {useCategoyId} from \"../../../../../../services/contexts/CategoryIdContext/context\";\nconst EditCategorySlider:React.FC = () => {\n\n\tconst categoryId = useCategoyId()\n  const { data ,mutate  } = useSWR<ICategorySlider[]>(\n\t  [`${baseAdminUrl}/category_slider/`,'category',  categoryId], // here we wanna mutate and trigger the swr with key /category_slider/companyId\n    fetcherWithParam\n  );\n  \n  const handleDeleteItem = async(id: number) => {\n\t  mutate(data!.filter(item => item.id!==id), false)\n\t   const res =await api.adminApi.deleteCategorySlider(id)\n\t   mutate()\n\t   return res\n\t\n    // const newItems = items.filter((item) => item.id !== id);\n    // setItems(newItems);\n  };\n  const handleSubmitImage =async (image : File) => {\n\t  await api.adminApi.addCategorySlider({category:categoryId , image})\n\t  mutate()\n  }\n\n  return (\n    <div className=\"tab-pane active\">\n      <div className=\"p-20 container\">\n        <div className=\"row el-element-overlay\">\n          {data && data.map((item) => (\n            <SliderCards key={item.id} image={item.image} index={item.id} onDelete={handleDeleteItem} />\n          ))}\n          <AddImage url=\"/\" onSubmit={handleSubmitImage}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditCategorySlider;\n","import React from \"react\";\nimport EditCategoryPicture from \"./EditCategoryPicture\";\nimport EditCategorySlider from \"./EditCategorySlider\";\nimport { ISliderImage } from \"../Table/model\";\nimport {ICategorySlider} from \"../../../../../../services/utils/api/Admin/models\";\n\nconst picCategory = \"تصویر دسته بندی\";\nconst sliderCategory = \"اسلایدر دسته بندی\";\n\ninterface IProps {\n  activeItem: string;\n  // picture: string;\n  onChangeActiveItem: (item: string) => void;\n}\nconst ImageEditSection: React.FC<IProps> = ({\n  activeItem,\n  // picture ,\n}) => {\n  // const isActivePageOne = activeItem === picCategory;\n  const isActivePageTwo = activeItem === sliderCategory;\n\n  return (\n    <div className=\"tab-content\">\n\t  {/* {isActivePageOne && <EditCategoryPicture image={picture}/>} */}\n      {isActivePageTwo && <EditCategorySlider  />}\n    </div>\n  );\n};\n\nexport default ImageEditSection;\n","import React from 'react'\nimport {categoryIdContext} from './context'\n\ninterface IProps {\n\tcategoryId : number\n}\n\nconst CategoryIdProvider:React.FC<IProps> = ({children , categoryId}) =>{\n\treturn(\n\t\t<categoryIdContext.Provider value={categoryId}>\n\t\t\t{children}\n\t\t\t</categoryIdContext.Provider>\n\t)\n}\nexport default CategoryIdProvider\n","import React from \"react\";\ninterface IProps {\n  width?: string;\n  height?: string;\n}\nconst Centerise: React.FC<IProps> = ({ width, height, children }) => {\n  return (\n    <div\n      className=\"d-flex justify-content-center align-items-center\"\n      style={{ width, height  }}\n    >\n      {children}\n    </div>\n  );\n};\nexport default Centerise;\n","import React, { useRef, useState } from \"react\";\nimport { EModalActionTypes } from \"../../../../../../services/contexts/ModalContext/models\";\nimport { useOutsideClicker } from \"../../../../../../services/hooks/useOutsideClicker\";\nimport { AppActions } from \"../../../../../../services/contexts/AppActions\";\nimport CloseModalIcon from \"../../../../../../components/CloseModalIcon\";\nimport CloseModalButton from \"../../../../../../components/CloseModalButton\";\nimport EditChangeName from \"./EditChangeName\";\nimport NavTabs from \"./NavTabs\";\nimport ImageEditSection from \"./ImageEditSection\";\nimport SubmitModalButton from \"../../../../../../components/SubmitModalButton\";\nimport {\n  ICategoryRes,\n  ICategorySlider,\n} from \"../../../../../../services/utils/api/Admin/models\";\nimport { TCompanyTableData } from \"../../../../../Dashboard/Scenes/CompaniesList/components/models\";\nimport { TCategoryTableData } from \"../../models\";\nimport useSWR from \"swr\";\nimport { fetcherWithParam } from \"../../../../../../services/axios/fetchers\";\nimport { baseAdminUrl } from \"../../../../../../services/utils/api/Admin\";\nimport Spinner from \"../../../../../../components/Spinner\";\nimport CategoryIdProvider from \"../../../../../../services/contexts/CategoryIdContext/CategoryIdProvider\";\nimport api from \"../../../../../../services/utils/api\";\nimport Button from \"../../../../../../components/Button\";\nimport Centerise from \"../../../../../../components/Centerise\";\n//-----------------------------------------------------------------\n\ninterface IProps {\n  modalDispatcher: (actions: AppActions) => void;\n}\n\nconst EditCategoryModal: React.FC<IProps & TCategoryTableData> = ({\n  modalDispatcher,\n  id,\n  title,\n}) => {\n  const { mutate } = useSWR<ICategoryRes[]>(`${baseAdminUrl}/category/`);\n  const { data } = useSWR<ICategorySlider[]>(\n    [`${baseAdminUrl}/category_slider/`, \"category\", id],\n    fetcherWithParam\n  );\n\n  const handleCloseModal = () => {\n    modalDispatcher({ type: EModalActionTypes.HIDE_MODAL });\n  };\n\n  const modalContentRef = useRef<HTMLDivElement>(null);\n  useOutsideClicker(modalContentRef, handleCloseModal);\n  const [activeItem, setActiveItem] = useState(\"اسلایدر دسته بندی\");\n  const [loading, setLoading] = useState(false);\n  const handleCahngeActiveItem = (item: string) => {\n    setActiveItem(item);\n  };\n  //----------------form states----------------------//\n  const [categoryName, setCategoryName] = useState(title);\n  const handleEditCategoryName = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setCategoryName(e.currentTarget.value);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      await api.adminApi.editCategory({ id, title: categoryName });\n      mutate();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"modal-backdrop show\"></div>\n      <div\n        id=\"myModal\"\n        className=\"modal show long-modal\"\n        style={{ display: \"block\" }}\n      >\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\" ref={modalContentRef}>\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\" id=\"myModalLabel\">\n                {title}\n              </h4>\n              <CloseModalIcon handleCloseModal={handleCloseModal} />\n            </div>\n            <div className=\"modal-body\">\n              <EditChangeName\n                label=\"عنوان دسته بندی\"\n                categoryName={categoryName}\n                onEditCategoryName={handleEditCategoryName}\n              />\n            </div>\n            <NavTabs\n              activeItem={activeItem}\n              onChangeActiveItem={handleCahngeActiveItem}\n            />\n\n            {!data && (\n              <Centerise height=\"170px\" width=\"auto\">\n                <Spinner size=\"lg\" />\n              </Centerise>\n            )}\n            {data && (\n              <>\n                <CategoryIdProvider categoryId={id}>\n                  <ImageEditSection\n                    // picture={image}\n\n                    activeItem={activeItem}\n                    onChangeActiveItem={handleCahngeActiveItem}\n                  />\n                </CategoryIdProvider>\n              </>\n            )}\n\n            <div className=\"modal-footer\">\n              <Button\n                onClick={handleSubmit}\n                type=\"success\"\n                text=\"ویرایش\"\n                loading={loading}\n              />\n              <Button onClick={handleCloseModal} type=\"danger\" text=\"بستن\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditCategoryModal;\n\n// user{\n\n// }\n\n// category:create category:delete\n","import React, {useCallback, useMemo} from \"react\";\nimport {CellProps, HeaderProps, useColumnOrder, useExpanded, useFilters, useFlexLayout, useGroupBy, usePagination, useResizeColumns, useRowSelect, useSortBy, useTable} from \"react-table\";\nimport useSWR from \"swr\";\nimport Button from \"../../../../components/Button\";\nimport {CircleButton} from \"../../../../components/CircleButton\";\nimport {ReactTable} from \"../../../../components/Table/ReactTable\";\nimport TableContainer from \"../../../../components/Table/TableContainer\";\nimport {useModalDispatch} from \"../../../../services/contexts/ModalContext/ModalContext\";\nimport {EModalActionTypes} from \"../../../../services/contexts/ModalContext/models\";\nimport api from \"../../../../services/utils/api\";\nimport {baseAdminUrl} from \"../../../../services/utils/api/Admin\";\nimport {ICategoryRes} from \"../../../../services/utils/api/Admin/models\";\nimport {renameProp, Tree} from \"../../../../services/utils/treeTravers\";\nimport CreateCategoryModal from \"./components/CategoryModal/CreateCategoryModal\";\nimport EditCategoryModal from \"./components/CategoryModal/EditCategoryModal\";\nimport {TCategoryTableData} from \"./models\";\n\n\nconst hooks = [\n  useColumnOrder,\n  useFilters,\n  useGroupBy,\n  useSortBy,\n  useExpanded,\n  useFlexLayout,\n  usePagination,\n  useResizeColumns,\n  useRowSelect,\n];\n\nconst Index = () => {\n  const modalDispatch = useModalDispatch();\n  const { data } = useSWR<ICategoryRes[]>(`${baseAdminUrl}/category/`);\n  const rows = useMemo(() => {\n    if (data) {\n      const newData = data.map((d) => {\n        return Tree.mapChangeChildrenName(renameProp, d);\n      });\n      return newData;\n    }\n    return [];\n  }, [data]);\n\n  const openEditCategoryModal = useCallback(\n    (modalProps: TCategoryTableData) => {\n      modalDispatch({\n        type: EModalActionTypes.SHOW_MODAL,\n        payload: {\n          component: EditCategoryModal,\n          props: {\n            ...modalProps,\n            // id: 1,\n            // name: \"فلان\",\n            // picture: \"bla\",\n            // slider: [\"khar\", \"olaq\"],\n          },\n        },\n      });\n    },\n    [modalDispatch]\n  );\n  const openCreateCategoryModal = () => {\n    modalDispatch({\n      type: EModalActionTypes.SHOW_MODAL,\n      payload: {\n        component: CreateCategoryModal,\n        props: {},\n      },\n    });\n  };\n  const handleCreateCategory = () => {\n    openCreateCategoryModal();\n  };\n  const handleDeleteCategory = async (id: number) => {\n    try {\n      const toDelete = window.confirm(\"آیا این دسته بندی حذف شود؟\");\n      if (toDelete) {\n        await api.adminApi.deleteCategory(id);\n      }\n    } catch (e) {}\n  };\n  const handleEditCategory = useCallback(\n    (data: TCategoryTableData) => {\n      openEditCategoryModal(data);\n    },\n    [openEditCategoryModal]\n  );\n  const columns = React.useMemo(\n    () => [\n      {\n        // Build our expander column\n        id: \"expander\", // Make sure it has an ID\n        accessor: \"expander\",\n        Header: ({\n          getToggleAllRowsExpandedProps,\n          isAllRowsExpanded,\n        }: HeaderProps<object>) => (\n          <span {...getToggleAllRowsExpandedProps()}>\n            {isAllRowsExpanded ? (\n              <i className=\"fas fa-minus-square\"></i>\n            ) : (\n              <i className=\"fas fa-plus-square\"></i>\n            )}\n          </span>\n        ),\n        Cell: ({ row }: CellProps<object>) =>\n          // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n          // to build the toggle for expanding a row\n          row.canExpand ? (\n            <span\n              {...row.getToggleRowExpandedProps({\n                style: {\n                  // We can even use the row.depth property\n                  // and paddingLeft to indicate the depth\n                  // of the row\n                  paddingRight: `${row.depth * 2}rem`,\n                },\n              })}\n            >\n              {row.isExpanded ? (\n                <i className=\"fas fa-minus-square\"></i>\n              ) : (\n                <i className=\"fas fa-plus-square\"></i>\n              )}\n            </span>\n          ) : null,\n      },\n      {\n        // {...row.getToggleRowExpandedProps({\n        //   style: { paddingRight: `${row.depth * 2} rem` },\n        // })} : ''}\n        Header: \"نام دسته بندی\",\n        accessor: \"title\",\n        Cell: ({\n          row: { canExpand, original, ...row },\n        }: CellProps<TCategoryTableData>) => {\n          return (\n            <span\n              {...row.getToggleRowExpandedProps({\n                style: { paddingRight: `${row.depth * 2}rem` },\n              })}\n              className={`${canExpand ? \"font-bold\" : \"\"}`}\n            >\n              {original.title}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"نام دسته بندی پدر\",\n        accessor: \"parent_title\",\n        Cell: ({\n          row: {\n            original: { parent_title },\n            ...row\n          },\n        }: CellProps<TCategoryTableData>) => {\n          return (\n            <span\n              {...row.getToggleRowExpandedProps({\n                style: { paddingRight: `${row.depth * 2}rem` },\n              })}\n            >\n              {parent_title ? parent_title : \"ندارد\"}\n            </span>\n          );\n        },\n      },\n      {\n        Header: \"تنظیمات\",\n        accessor: \"options\",\n        Cell: ({ row: { original } }: CellProps<TCategoryTableData>) => {\n          const { id } = original;\n          return (\n            <>\n              <CircleButton\n                onClick={() => handleDeleteCategory(id!)}\n                icon=\"icon-trash \"\n                type=\"danger\"\n                className=\"ml-2\"\n              />\n              <CircleButton\n                onClick={() => handleEditCategory(original!)}\n                icon=\"icon-pencil\"\n                type=\"warning\"\n              />\n            </>\n          );\n        },\n      },\n    ],\n    [handleEditCategory]\n  );\n\n  // const data = React.useMemo(() => makeData(5, 5, 5), []);\n  const tableInstance = useTable<object>({ columns, data: rows }, ...hooks);\n\n  return (\n    <div>\n      <div className=\"card\">\n        <div className=\"card-body px-4\">\n          <TableContainer\n            {...tableInstance}\n            tool={() => (\n              <Button\n                onClick={handleCreateCategory}\n                text=\"ایجاد دسته بندی\"\n                type=\"info\"\n                className=\"ml-auto d-block mr-5\"\n              />\n            )}\n          >\n            <ReactTable {...tableInstance} />\n          </TableContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n{\n  /* <Table<ICategory>\n            entryData={getCategories()}\n            columns={[\n              { path: \"id\", label: \"شناسه\", type: \"number\" },\n              { path: \"name\", label: \"مشخصات\", type: \"text\" },\n            ]}\n            features={{\n              paginating: true,\n              defaultPageSize: 3,\n              filtering: true,\n              tableSizing: true,\n              hasAction: true,\n              addable: true,\n              editable: true,\n              deletable: true,\n            }}\n            toBeRenderedModal={EditCategoryModal}\n          /> */\n}\nexport default Index;\n"],"sourceRoot":""}