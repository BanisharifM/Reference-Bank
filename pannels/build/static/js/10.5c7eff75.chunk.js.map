{"version":3,"sources":["components/PictureOverlayPreview.tsx","scenes/siteManager/scenes/CategoryManager/components/CategoryModal/PicCart.tsx","scenes/siteManager/components/AddImage.tsx","../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx","components/SkeletonLoaders/SliderImageLoader.tsx","scenes/CompanyPageManager/scenes/Slider/components/SliderLoaders.tsx","components/Card/Card.tsx","components/Card/CardText.tsx","components/Card/CardBody.tsx","components/Card/CardImg.tsx","scenes/CompanyPageManager/scenes/Slider/components/SliderCard.tsx","scenes/CompanyPageManager/scenes/Slider/components/Main.tsx","scenes/CompanyPageManager/scenes/Slider/index.tsx"],"names":["PictureOverlayPreview","modalDispatcher","image","handleCloseModal","type","EModalActionTypes","HIDE_MODAL","mfpRef","useRef","useOutsideClicker","className","style","overflow","ref","title","onClick","src","maxHeight","alt","PicCart","dispatch","useModalDispatch","SHOW_MODAL","payload","component","props","AddImage","onSubmit","url","useState","files","setFiles","useDropzone","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","handleSend","a","thumbs","index","Fragment","key","size","Button","text","newFiles","filter","item","i","handleRemove","useEffect","forEach","revokeObjectURL","length","animate","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","uniqueKey","interval","rtl","speed","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","React.createElement","role","id","x","y","width","height","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","defaultProps","Svg","Facebook","viewBox","rx","cx","cy","r","SliderImageLoader","ry","SliderLoaders","Card","CardText","CardBody","CardImg","background","backgroundSize","backgroundPosition","SliderCard","onDelete","onSureDelete","isSureState","onIgnoreSureDelete","Main","useSWR","baseMyCompanySlideUrl","data","mutate","sureDelete","setSureDelete","wantDeletedItemId","setWantDeletedItemId","handleSureDelete","handleDelete","api","myCompanySliderApi","deleteMyCompanySlider","handleIgnoreSureDelete","Promise","res","Index"],"mappings":"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","file":"static/js/10.5c7eff75.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport Img from \"../assets/images/users/1.jpg\";\nimport { EModalActionTypes } from \"../services/contexts/ModalContext/models\";\nimport { AppActions } from \"../services/contexts/AppActions\";\nimport { useOutsideClicker } from \"../services/hooks/useOutsideClicker\";\n\ninterface IProps {\n  modalDispatcher: (actions: AppActions) => void;\n  image: string;\n}\nconst PictureOverlayPreview: React.FC<IProps> = ({\n  modalDispatcher,\n  image,\n}) => {\n  const handleCloseModal = () => {\n    modalDispatcher({ type: EModalActionTypes.HIDE_MODAL });\n  };\n  const mfpRef = useRef<HTMLDivElement>(null);\n  useOutsideClicker(mfpRef, handleCloseModal);\n  return (\n    <>\n      <div className=\"mfp-bg mfp-img-mobile mfp-ready\"></div>\n      <div\n        className=\"mfp-wrap mfp-close-btn-in mfp-img-mobile mfp-ready\"\n        style={{ overflow: \"hidden auto\" }}\n      >\n        <div className=\"mfp-container mfp-s-ready mfp-image-holder\">\n          <div className=\"mfp-content\" ref={mfpRef}>\n            <div className=\"mfp-figure\">\n              <button\n                title=\"Close (Esc)\"\n                type=\"button\"\n                className=\"mfp-close\"\n                onClick={handleCloseModal}\n              >\n                ×\n              </button>\n              <figure>\n                <img\n                  className=\"mfp-img\"\n                  src={image}\n                  style={{ maxHeight: \"729px\" }}\n                  alt=\"user-page\"\n                />\n                <figcaption>\n                  <div className=\"mfp-bottom-bar\">\n                    <div className=\"mfp-title\"></div>\n                    <div className=\"mfp-counter\"></div>\n                  </div>\n                </figcaption>\n              </figure>\n            </div>\n          </div>\n          <div className=\"mfp-preloader\">Loading...</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PictureOverlayPreview;\n","import React from \"react\";\nimport { useModalDispatch } from \"../../../../../../services/contexts/ModalContext/ModalContext\";\nimport { EModalActionTypes } from \"../../../../../../services/contexts/ModalContext/models\";\nimport PictureOverlayPreview from \"../../../../../../components/PictureOverlayPreview\";\n\ninterface IProps {\n  image: string;\n}\nconst PicCart: React.FC<IProps> = ({ image }) => {\n  const dispatch = useModalDispatch();\n  const handleOpenPreview = () => {\n    dispatch({\n      type: EModalActionTypes.SHOW_MODAL,\n      payload: { component: PictureOverlayPreview, props: { image } },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"el-card-item\">\n          <div className=\"el-card-avatar el-overlay-1\">\n            <img src={image} alt=\"user\" />\n            <div className=\"el-overlay\">\n              <ul className=\"el-info\">\n                <li onClick={handleOpenPreview}>\n                  <a className=\"btn default btn-outline image-popup-vertical-fit\">\n                    <i className=\"icon-magnifier\"></i>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n          {/* <div className=\"el-card-content\">\n\n          </div> */}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PicCart;\n","// import React from \"react\";\n// import Img1 from \"../../../../../assets/images/add.png\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport PicCart from \"../scenes/CategoryManager/components/CategoryModal/PicCart\";\nimport Button from \"../../../components/Button\";\n\ninterface IProps {\n  url: string;\n  onSubmit: (image: File) => Promise<any>;\n}\ninterface IFileWithPreview extends File {\n  preview: any;\n}\nconst AddImage: React.FC<IProps> = ({ onSubmit, url }) => {\n  const [files, setFiles] = useState<File[]>([]);\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    onDrop: (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n  });\n  const handleRemove = (index: number) => {\n    const newFiles = files.filter((item, i) => index !== i);\n    setFiles(newFiles);\n  };\n  const handleSend = async (file: File) => {\n    try {\n      await onSubmit(file);\n    } catch (e) {}\n  };\n\n  const thumbs = (files as Array<IFileWithPreview>).map((file, index) => (\n    <React.Fragment key={file.size}>\n      <PicCart image={file.preview} />\n      <Button\n        onClick={() => handleSend(file)}\n        className=\"ml-2 \"\n        type=\"success\"\n        text=\"ارسال\"\n      />\n      <Button onClick={() => handleRemove(index)} type=\"danger\" text=\"حذف\" />\n    </React.Fragment>\n  ));\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      (files as Array<IFileWithPreview>).forEach((file) =>\n        URL.revokeObjectURL(file.preview)\n      );\n    },\n    [files]\n  );\n  return (\n    <div className=\"col-lg-6\">\n      <section className=\"container\">\n        <div className=\"row\">\n          {!!thumbs.length && <div className=\"col-md-6\">{thumbs}</div>}{\" \"}\n          <div className=\"col-md-6\">\n            <div {...getRootProps({ className: \"dropzone\" })}>\n              <input {...getInputProps()} />\n              <p>\n                تصویر مورد نظر خود را انتخاب کنید یا در این محل بکشید. فرمتهای\n                jpeg و png پشتیبانی میشود\n              </p>\n              <span className=\"fa fa-plus\"></span>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\nexport default AddImage;\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs role=\"presentation\">\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst SliderImageLoader = () => (\n  <ContentLoader\n    speed={2}\n    width={250}\n    height={250}\n    viewBox=\"0 0 250 250\"\n    backgroundColor=\"#dedede\"\n    foregroundColor=\"#f5f5f5\"\n  >\n    <rect x=\"22\" y=\"9\" rx=\"0\" ry=\"0\" width=\"223\" height=\"154\" />\n    <rect x=\"170\" y=\"193\" rx=\"0\" ry=\"0\" width=\"73\" height=\"42\" />\n  </ContentLoader>\n);\n\nexport default SliderImageLoader;\n","import React from \"react\";\nimport SliderImageLoader from \"../../../../../components/SkeletonLoaders/SliderImageLoader\";\n\nconst SliderLoaders = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6 col-lg-3\">\n        <SliderImageLoader />\n      </div>\n      <div className=\"col-md-6 col-lg-3\">\n        <SliderImageLoader />\n      </div>\n      <div className=\"col-md-6 col-lg-3\">\n        <SliderImageLoader />\n      </div>\n      <div className=\"col-md-6 col-lg-3\">\n        <SliderImageLoader />\n      </div>\n    </div>\n  );\n};\nexport default SliderLoaders\n","import React from \"react\";\n\nconst Card: React.FC = ({ children }) => {\n  return <div className=\"card\">{children}</div>;\n};\nexport default Card\n","import React from \"react\";\n\nconst CardText: React.FC = ({ children }) => (\n  <p className=\"card-text\">{children}</p>\n);\nexport default CardText;\n","import React from \"react\";\n\nconst CardBody: React.FC = ({ children }) => (\n  <div className=\"card-body\">{children}</div>\n);\nexport default CardBody;\n","import React from \"react\";\nimport { useModalDispatch } from \"../../services/contexts/ModalContext/ModalContext\";\nimport { EModalActionTypes } from \"../../services/contexts/ModalContext/models\";\nimport PictureOverlayPreview from \"../PictureOverlayPreview\";\nconst CardImg: React.FC<{ src: string }> = ({ src }) => {\n  const dispatch = useModalDispatch();\n  const handleOpenPreview = () => {\n    dispatch({\n      type: EModalActionTypes.SHOW_MODAL,\n      payload: { component: PictureOverlayPreview, props: { image: src } },\n    });\n  };\n  return (\n    <>\n      <div className=\"el-card-item pb-0\">\n        <div className=\"el-card-avatar el-overlay-1\">\n          <div\n            style={{\n              width: \"100%\",\n              height: \"150px\",\n              background: `url(${src})`,\n              backgroundSize: \"cover\",\n              backgroundPosition:'center'\n            }}\n          />\n          <div className=\"el-overlay\">\n            <ul className=\"el-info\">\n              <li>\n                <a\n                  className=\"btn default btn-outline image-popup-vertical-fit\"\n                  onClick={handleOpenPreview}\n                >\n                  <i className=\"icon-magnifier\"></i>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default CardImg;\n","import React from \"react\";\nimport { IMyCompanySliderRes } from \"../../../../../services/utils/api/MyCompanySlider/models\";\nimport Card from \"../../../../../components/Card/Card\";\nimport Button from \"../../../../../components/Button\";\nimport CardText from \"../../../../../components/Card/CardText\";\nimport CardBody from \"../../../../../components/Card/CardBody\";\nimport CardImg from \"../../../../../components/Card/CardImg\";\n\ninterface IProps {\n  onDelete: (id: number) => void;\n  onSureDelete: (id: number) => void;\n  isSureState: boolean;\n  onIgnoreSureDelete:()=>void\n}\nconst SliderCard: React.FC<IMyCompanySliderRes & IProps> = ({\n  image,\n  id,\n  onDelete,\n  onSureDelete,\n  isSureState,\n  onIgnoreSureDelete\n}) => {\n  return (\n    <Card>\n      <CardImg src={image} />\n      <CardBody>\n        {isSureState ? (\n          <>\n            <CardText>آیامیخواهید تصویر را حذف کنید؟</CardText>\n            <Button\n              type=\"success\"\n              text=\"بلی\"\n              className=\"ml-2\"\n              onClick={() => onDelete(id)}\n            />\n            <Button type=\"danger\" text=\"خیر\" onClick={()=>onIgnoreSureDelete()}/>\n          </>\n        ) : (\n          <Button onClick={() => onSureDelete(id)} type=\"warning\" text=\"حذف\" />\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default SliderCard;\n","import React, { useState } from \"react\";\nimport useSWR from \"swr\";\nimport Button from \"../../../../../components/Button\";\nimport api from \"../../../../../services/utils/api\";\nimport { baseMyCompanySlideUrl } from \"../../../../../services/utils/api/MyCompanySlider\";\nimport { IMyCompanySliderRes } from \"../../../../../services/utils/api/MyCompanySlider/models\";\nimport AddImage from \"../../../../siteManager/components/AddImage\";\nimport Card from \"../../../../../components/Card/Card\";\nimport SliderLoaders from \"./SliderLoaders\";\nimport SliderCard from \"./SliderCard\";\n\nconst Main = () => {\n  const { data, mutate } = useSWR<IMyCompanySliderRes[]>(\n    `${baseMyCompanySlideUrl}/`\n  );\n\n  const [sureDelete, setSureDelete] = useState(false);\n  const [wantDeletedItemId, setWantDeletedItemId] = useState(-1);\n  const handleSureDelete = (id: number) => {\n    setSureDelete(true);\n    setWantDeletedItemId(id);\n  };\n  const handleDelete = async (id: number) => {\n    try {\n      mutate(\n        data?.filter((item) => item.id !== id),\n        false\n      );\n      await api.myCompanySliderApi.deleteMyCompanySlider(id);\n      mutate();\n    } catch (err) {}\n  };\n  const handleIgnoreSureDelete = () => {\n    setSureDelete(false);\n    setWantDeletedItemId(-1);\n  };\n  //ubuntu\n  //tPJr557pLI\n  //https://help.arvancloud.com/hc/fa/articles/360034478893\n  //185.206.92.24\n\n  return (\n    <>\n      {!data && <SliderLoaders />}\n      {/* <SliderLoaders /> */}\n      {data && (\n        <>\n          {data.map((item) => (\n            <div className=\"col-lg-3 col-md-6\">\n              <SliderCard\n                {...item}\n                isSureState={item.id === wantDeletedItemId && sureDelete}\n                onDelete={handleDelete}\n                onSureDelete={handleSureDelete}\n                onIgnoreSureDelete={handleIgnoreSureDelete}\n              />\n            </div>\n          ))}\n          <AddImage url=\"/\" onSubmit={() => new Promise((res) => res)} />\n        </>\n      )}\n    </>\n  );\n};\nexport default Main;\n","import React from \"react\";\nimport Main from \"./components/Main\";\nconst Index = () => {\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h4 className=\"d-inline\">اسلایدر شرکت</h4>\n          <p className=\"text-muted m-t-0\">\n            میتوانید اسلایدر شرکت خود را به دلخواه تغییر دهید\n          </p>\n          <div className=\"row el-element-overlay\">\n            <Main />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Index;\n"],"sourceRoot":""}